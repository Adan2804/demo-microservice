# ScaledObject para Escalado Inteligente Hacia Abajo (Horario de Prueba)
# Periodo: 5:10 PM - 6:00 PM (UTC-5, Colombia)
# Lógica: Reduce pods de 3 a 2 SOLO si CPU y Memoria < 50%
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: demo-microservice-intelligent-downscale
  namespace: default
  labels:
    app: demo-microservice-istio
    scaling-strategy: intelligent-downscale
    managed-by: argocd
  annotations:
    scaledobject.keda.sh/transfer-hpa-ownership: "true"
    description: "Escalado de prueba condicional - reduce a 2 pods si carga es baja (5:10PM-6PM)"
spec:
  scaleTargetRef:
    name: demo-microservice-production-istio
  
  # Configuración de réplicas para horario nocturno
  minReplicaCount: 2      # Mínimo absoluto: nunca menos de 2 pods
  maxReplicaCount: 3      # Máximo durante la noche: 3 pods
  
  # Política de escalado: solo escala hacia abajo si TODAS las condiciones se cumplen
  pollingInterval: 30     # Evalúa cada 30 segundos
  cooldownPeriod: 600     # Espera 10 minutos antes de escalar hacia abajo (estabilización)
  
  triggers:
    # Trigger 1: Horario de prueba (5:10 PM - 6:00 PM)
    - type: cron
      metadata:
        timezone: "America/Bogota"      # UTC-5 (Colombia)
        start: "10 17 * * *"             # 5:10 PM - Inicia evaluación
        end: "0 18 * * *"                # 6:00 PM - Termina evaluación
        desiredReplicas: "2"             # Objetivo: 2 pods si es seguro
    
    # Trigger 3: Condición de CPU (debe estar < 50% para activar downscale)
    - type: cpu
      metricType: Utilization
      metadata:
        value: "50"                      # Solo escala hacia abajo si CPU < 50%
    
    # Trigger 4: Condición de Memoria (debe estar < 50% para activar downscale)
    - type: memory
      metricType: Utilization
      metadata:
        value: "50"                      # Solo escala hacia abajo si Memoria < 50%
  
  # Configuración avanzada del HPA generado
  advanced:
    horizontalPodAutoscalerConfig:
      name: demo-microservice-intelligent-downscale-hpa
      behavior:
        scaleDown:
          # Política conservadora: escala lentamente hacia abajo
          stabilizationWindowSeconds: 600  # Espera 10 minutos de estabilidad
          policies:
            - type: Pods
              value: 1                       # Reduce máximo 1 pod a la vez
              periodSeconds: 300             # Cada 5 minutos
          selectPolicy: Min                  # Usa la política más conservadora
        
        scaleUp:
          # Política rápida: escala rápidamente hacia arriba si hay picos
          stabilizationWindowSeconds: 0      # Sin espera para escalar hacia arriba
          policies:
            - type: Pods
              value: 2                       # Puede agregar hasta 2 pods
              periodSeconds: 60              # Cada minuto
          selectPolicy: Max                  # Usa la política más agresiva

---
# ServiceMonitor para observar el comportamiento del escalado nocturno
# (Opcional - requiere Prometheus Operator)
apiVersion: v1
kind: ConfigMap
metadata:
  name: intelligent-downscale-config
  namespace: default
  labels:
    app: demo-microservice-istio
    scaling-strategy: intelligent-downscale
data:
  description: |
    ScaledObject para Escalado Inteligente Hacia Abajo (PRUEBA)
    
    Periodo Activo: 5:10 PM - 6:00 PM (UTC-5, Colombia)
    
    Comportamiento:
    - Evalúa la carga cada 30 segundos durante el horario de prueba
    - Reduce de 3 a 2 pods SOLO si:
      * CPU < 50%
      * Memoria < 50%
      * La carga se mantiene baja por 10 minutos (cooldown)
    
    - Si la carga es alta (CPU o Memoria >= 50%):
      * Mantiene 3 pods para proteger el rendimiento
      * No arriesga la estabilidad del sistema
    
    Ahorro Esperado:
    - 33% de reducción en recursos durante horario de prueba
    - Solo cuando es seguro hacerlo
  
  timezone: "America/Bogota"
  active-hours: "17:10 - 18:00"
  min-replicas: "2"
  max-replicas: "3"
  cpu-threshold: "50%"
  memory-threshold: "50%"
  cooldown-period: "600s"
