apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-config
  namespace: default
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream stable_backend {
            server demo-microservice-active.default.svc.cluster.local:80;
        }
        
        upstream experiment_backend {
            server demo-microservice-preview.default.svc.cluster.local:80;
        }
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                # Verificar header experimental
                set $backend "stable_backend";
                
                if ($http_aws_cf_cd_super_svp_9f8b7a6d = "123e4567-e89b-12d3-a456-42661417400") {
                    set $backend "experiment_backend";
                }
                
                # Proxy al backend correspondiente
                proxy_pass http://$backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                
                # Headers de respuesta para identificar la ruta
                add_header X-Routed-To $backend always;
                add_header X-Experiment-Active $http_aws_cf_cd_super_svp_9f8b7a6d always;
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-proxy
  namespace: default
  labels:
    app: nginx-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-proxy
  template:
    metadata:
      labels:
        app: nginx-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-proxy-config

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy
  namespace: default
  labels:
    app: nginx-proxy
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: nginx-proxy