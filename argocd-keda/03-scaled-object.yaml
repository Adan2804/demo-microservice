# ScaledObject para escalado inteligente con KEDA
# Horarios: 5:40 PM - 6:00 PM (2 pods), resto del día (3 pods)
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: demo-microservice-keda-scaler
  namespace: default
  labels:
    app: demo-microservice-keda
    scaling-strategy: intelligent
    managed-by: argocd-keda
  annotations:
    scaledobject.keda.sh/transfer-hpa-ownership: "true"
    description: "Escalado inteligente - 2 pods (5:40PM-6PM), 3 pods (resto)"
spec:
  scaleTargetRef:
    name: demo-microservice-keda
  
  minReplicaCount: 3      # Por defecto 3 pods (fuera del horario de downscale)
  maxReplicaCount: 10
  
  pollingInterval: 30
  cooldownPeriod: 60      # Reducido a 1 minuto para pruebas rápidas
  
  triggers:
    # Trigger único de cron: Durante 5:40 PM - 6:00 PM reduce a 2 pods
    # Fuera de este horario, usa minReplicaCount = 3
    - type: cron
      metadata:
        timezone: "America/Bogota"
        start: "50 17 * * *"             # 5:50 PM
        end: "0 18 * * *"                # 6:00 PM
        desiredReplicas: "2"
    
    # Escalado por CPU (solo escala hacia arriba)
    - type: cpu
      metricType: Utilization
      metadata:
        value: "70"
    
    # Escalado por Memoria (solo escala hacia arriba)
    - type: memory
      metricType: Utilization
      metadata:
        value: "70"
  
  advanced:
    horizontalPodAutoscalerConfig:
      name: demo-microservice-keda-hpa
      behavior:
        scaleUp:
          stabilizationWindowSeconds: 0
          policies:
            - type: Pods
              value: 2
              periodSeconds: 60
          selectPolicy: Max
        scaleDown:
          stabilizationWindowSeconds: 60    # Reducido para pruebas
          policies:
            - type: Pods
              value: 1
              periodSeconds: 60
          selectPolicy: Min
