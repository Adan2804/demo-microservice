# ScaledObject para escalado inteligente con KEDA
# Solo usa triggers de cron (sin CPU/Memoria para evitar interferencias)
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: demo-microservice-keda-scaler
  namespace: default
  labels:
    app: demo-microservice-keda
    scaling-strategy: intelligent
    managed-by: argocd-keda
  annotations:
    scaledobject.keda.sh/transfer-hpa-ownership: "true"
    description: "Escalado por horario - 2 pods (5:40PM-6PM), 3 pods (resto)"
spec:
  scaleTargetRef:
    name: demo-microservice-keda
  
  minReplicaCount: 2
  maxReplicaCount: 10
  
  pollingInterval: 10     # Evalúa cada 10 segundos
  cooldownPeriod: 30      # Espera 30 segundos antes de escalar
  
  triggers:
    # Downscale: 5:40 PM - 6:00 PM → 2 pods
    - type: cron
      metadata:
        timezone: "America/Bogota"
        start: "55 17 * * *"
        end: "0 18 * * *"
        desiredReplicas: "2"
    
    # Upscale: 6:00 PM - 5:40 PM → 3 pods
    - type: cron
      metadata:
        timezone: "America/Bogota"
        start: "0 18 * * *"
        end: "55 17 * * *"
        desiredReplicas: "3"
  
  advanced:
    horizontalPodAutoscalerConfig:
      name: demo-microservice-keda-hpa
      behavior:
        scaleUp:
          stabilizationWindowSeconds: 0
          policies:
            - type: Pods
              value: 2
              periodSeconds: 30
          selectPolicy: Max
        scaleDown:
          stabilizationWindowSeconds: 30
          policies:
            - type: Pods
              value: 1
              periodSeconds: 30
          selectPolicy: Min
