plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.demo'
version = '1.0.0'
sourceCompatibility = '17'

// Specify the main class to avoid ambiguity
springBoot {
    mainClass = 'com.demo.DemoMicroserviceApplication'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    
    // Micrometer for metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Optional: Spring Cloud Gateway dependencies if needed
    // implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Task para construir imagen Docker
task buildDockerImage(type: Exec) {
    dependsOn bootJar
    commandLine 'docker', 'build', '-t', "demo-microservice:${version}", '.'
}

// Task para construir imagen con tag espec√≠fico
task buildDockerImageWithTag(type: Exec) {
    dependsOn bootJar
    def imageTag = project.findProperty('imageTag') ?: version
    commandLine 'docker', 'build', '-t', "ecr-repo/demo-microservice:${imageTag}", '.'
}

// Task para push a registry
task pushDockerImage(type: Exec) {
    dependsOn buildDockerImageWithTag
    def imageTag = project.findProperty('imageTag') ?: version
    commandLine 'docker', 'push', "ecr-repo/demo-microservice:${imageTag}"
}